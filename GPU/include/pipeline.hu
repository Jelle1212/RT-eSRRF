#ifndef PIPELINE_H
#define PIPELINE_H

#include <cuda_runtime.h>
#include <stdio.h>
#include <stdbool.h>

#define CHECK_CUDA(call) do { \
    cudaError_t err = call; \
    if (err != cudaSuccess) { \
        printf("CUDA Error: %s at %s:%d\n", cudaGetErrorString(err), __FILE__, __LINE__); \
        exit(EXIT_FAILURE); \
    } \
} while (0)

#ifdef __cplusplus
extern "C" {
#endif
    struct ESRRFParams {
        int nFrames;
        int rows;
        int cols;
        float shift;
        float magnification;
        float radius;
        float sensitivity;
        bool doIntensityWeighting;
        int temporalType;
    };
    void initPipeline(const struct ESRRFParams* eSRRFParams);
    void processFrame(const float* image_in, float* sr_image, int frame_index);     
    void deintPipeline();
#ifdef __cplusplus
}
#endif
#endif